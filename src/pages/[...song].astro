---
import MainLayout from "@/layouts/MainLayout.astro";
import { LyricsParser } from "@/components/LyricsParser";
import { getAllLyrics, type StyledLyricsElement } from "@/types/lyrics";
import { getArtistById } from "@/lib/artists";

export async function getStaticPaths() {
  const lyricsFiles = await getAllLyrics();

  return lyricsFiles.map((file) => {
    const artist = getArtistById(file.artistId);
    if (!artist) {
      throw new Error(`Artist not found: ${file.artistId}`);
    }

    return {
      params: {
        song: `${artist.pathname}/${file.albumId}/${file.id}`,
      },
      props: {
        frontmatter: file.meta,
        content: file.content(),
      },
    };
  });
}

// const { artist, album, songName } = Astro.params;
const { frontmatter, content } = Astro.props;
const parsedLyrics: StyledLyricsElement[][] = LyricsParser.parse(content);
---

<MainLayout title={frontmatter.title}>
  <div class="lyrics-container">
    <h1>{frontmatter.title}</h1>
    {
      parsedLyrics.map((line) => {
        console.log(line);
        return;
      })
    }
    {
      parsedLyrics.map((line) => (
        <div class="lyrics-line">
          {line.map((segment) => {
            if (segment.type === "html") {
              return <Fragment set:html={segment.content} />;
            }
            if (segment.type === "furigana") {
              return (
                <ruby>
                  {segment.content}
                  <rt>{segment.furigana}</rt>
                </ruby>
              );
            }
            if (segment.type === "special") {
              return (
                <ruby>
                  <span class="underline">{segment.content}</span>
                  <rt>{segment.furigana}</rt>
                </ruby>
              );
            }
            return <span>{segment.content}</span>;
          })}
        </div>
      ))
    }
  </div>
</MainLayout>

<style>
  ruby {
    display: inline-flex;
    flex-direction: column;
    text-align: center;
    line-height: 0.25;
    margin-top: 1em;
  }

  rt {
    text-align: center;
    transform: translateY(-1.65rem); /* 可選：微調 rt 位置 */
  }

  .underline {
    text-decoration: underline;
  }
</style>
