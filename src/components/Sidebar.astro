---
import { getEnrichedAlbums } from "@/lib/albums";
import { artistsConfig } from "@/data/artists";
import { getDisplayAlbumType } from "@/types/albums";

const enrichedAlbums = await Promise.all(
  Object.keys(artistsConfig).map(async (artistId) => {
    const albums = await getEnrichedAlbums(artistId);
    const artist = artistsConfig[artistId];
    return { ...artist, albums };
  })
);
---

<aside class="w-64 bg-white shadow-lg">
  <nav class="p-4">
    {
      enrichedAlbums.map(
        (artistData) =>
          artistData.albums.length > 0 && (
            <div class="mb-6">
              <div class="px-2 py-2 mb-2 bg-gray-100 rounded">
                <span class="font-medium text-sm">
                  {artistData.displayName}
                </span>
              </div>
              <div class="space-y-4">
                {artistData.albums.map((album) => (
                  <div class="ml-2">
                    <details>
                      <summary class="flex items-center justify-between w-full px-2 py-1 hover:bg-gray-100 rounded cursor-pointer">
                        <div class="flex flex-col">
                          {album.showTypeInNav && (
                            <span class="text-xs text-gray-600">
                              {getDisplayAlbumType(album)}
                            </span>
                          )}
                          <span class="text-xs">{album.title}</span>
                        </div>
                        <span class="text-xs text-gray-500">
                          {album.releaseMonth
                            ? `${album.releaseYear}.${String(album.releaseMonth).padStart(2, "0")}`
                            : album.releaseYear}
                        </span>
                      </summary>
                      <ul class="ml-4 mt-1">
                        {album.songs.map((song) => (
                          <li>
                            <a
                              href={`/${artistData.pathname}/${album.id}/${song.id}`}
                              class="block px-2 py-1 text-xs hover:text-blue-500"
                            >
                              {song.meta.title}
                            </a>
                          </li>
                        ))}
                      </ul>
                    </details>
                  </div>
                ))}
              </div>
            </div>
          )
      )
    }
  </nav>
</aside>

<style>
  details > summary {
    list-style: none;
  }
  details > summary::-webkit-details-marker {
    display: none;
  }
</style>

